cmake_minimum_required(VERSION 3.14)

project (CMON_PROXY)

if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  set(CMAKE_INSTALL_PREFIX "/usr" CACHE PATH "default install path" FORCE)
endif()

set(CCMGR_PATH "${CMAKE_INSTALL_PREFIX}/bin/ccmgr")
configure_file(${CMAKE_SOURCE_DIR}/etc/systemd/system/cmon-proxy.service.in ${CMAKE_SOURCE_DIR}/etc/systemd/system/cmon-proxy.service @ONLY)

message(STATUS ${CMAKE_BINARY_DIR})
message(STATUS ${CMAKE_SOURCE_DIR})
message(STATUS "Install prefix: ${CMAKE_INSTALL_PREFIX}")

if (NOT DEFINED BUILDNUM)
    set (BUILDNUM 1)
endif ()

file(STRINGS ${CMAKE_SOURCE_DIR}/version _version)
string(REGEX MATCH "[0-9]+.[0-9]+.[0-99]+" VERSION "${_version}")
if (_version)
    string(REGEX MATCHALL "[0-9]+" VERSION_LIST "${VERSION}")
    list(GET VERSION_LIST 0 MAJOR_VERSION)
    list(GET VERSION_LIST 1 MINOR_VERSION)
    list(GET VERSION_LIST 2 PATCH_VERSION)

    message (STATUS "Version string ${_version}")
    message (STATUS "Major version ${MAJOR_VERSION}")
    message (STATUS "Minor version ${MINOR_VERSION}")
    message (STATUS "Patch version ${PATCH_VERSION}")
    message (STATUS "Build number ${BUILDNUM}")
endif (_version)

#
# install
#

install(DIRECTORY DESTINATION /usr/share/ccmgr/)

install(
    FILES ${CMAKE_SOURCE_DIR}/build/ccmgr
    DESTINATION bin
    PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ
    GROUP_EXECUTE GROUP_READ WORLD_READ WORLD_EXECUTE
)

install(
    FILES ${CMAKE_SOURCE_DIR}/build/ccmgradm
    DESTINATION bin
    PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ
    GROUP_EXECUTE GROUP_READ WORLD_READ WORLD_EXECUTE
)


install(FILES ${CMAKE_SOURCE_DIR}/etc/systemd/system/cmon-proxy.service DESTINATION /etc/systemd/system)


set (CPACK_PACKAGE_NAME "clustercontrol-proxy")
set (CPACK_PACKAGE_VENDOR "Severalnines AB")
set (CPACK_PACKAGE_CONTACT "support@severalnines.com")
set (CPACK_PACKAGE_DESCRIPTION "Severalnines ClusterControl Controller Manager")
set (CPACK_PACKAGE_DESCRIPTION_SUMMARY "Severalnines ClusterControl Controller Manager")
set (CPACK_PACKAGE_VERSION "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}")
set (CPACK_PACKAGE_VERSION_MAJOR "${MAJOR_VERSION}")
set (CPACK_PACKAGE_VERSION_MINOR "${MINOR_VERSION}")
set (CPACK_PACKAGE_VERSION_PATCH "${PATCH_VERSION}")

set (CPACK_PACKAGE_RELEASE "${BUILDNUM}")
set (CPACK_RPM_PACKAGE_RELEASE ${CPACK_PACKAGE_RELEASE})
set (CPACK_DEBIAN_PACKAGE_VERSION "${CPACK_PACKAGE_VERSION}-${CPACK_PACKAGE_RELEASE}")

set (CPACK_PACKAGE_INSTALL_DIRECTORY "${CMAKE_INSTALL_PREFIX}")
set (CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}_${MAJOR_VERSION}.${MINOR_VERSION}.${CPACK_PACKAGE_VERSION_PATCH}-${CPACK_PACKAGE_RELEASE}_${CMAKE_SYSTEM_PROCESSOR}")
if (${CPACK_GENERATOR} STREQUAL "RPM")
    set (CPACK_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}-${MAJOR_VERSION}.${MINOR_VERSION}.${CPACK_PACKAGE_VERSION_PATCH}-${CPACK_PACKAGE_RELEASE}-${CMAKE_SYSTEM_PROCESSOR}")
endif()

set (CPACK_SOURCE_PACKAGE_FILE_NAME "${CPACK_PACKAGE_NAME}_${MAJOR_VERSION}_${MINOR_VERSION}.${CPACK_PACKAGE_VERSION_PATCH}")

set (CPACK_CMAKE_GENERATOR "Unix Makefiles")

set (CPACK_PACKAGING_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX})
# RPM
set (CPACK_RPM_PACKAGE_LICENSE "GPLv2+")
set (CPACK_RPM_PACKAGE_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})
set (CPACK_RPM_SPEC_MORE_DEFINE
    "%define ignore \#\n")

set (CPACK_RPM_COMPONENT_INSTALL OFF)
set (CPACK_RPM_PRE_INSTALL_SCRIPT_FILE "${CMAKE_SOURCE_DIR}/scripts/preinst")
set (CPACK_RPM_POST_INSTALL_SCRIPT_FILE "${CMAKE_SOURCE_DIR}/scripts/postinst")
# DEB
set (CPACK_DEBIAN_PACKAGE_MAINTAINER ${CPACK_PACKAGE_CONTACT})
set (CPACK_DEBIAN_PACKAGE_SECTION "database")
set (CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_SOURCE_DIR}/scripts/prerm;${CMAKE_SOURCE_DIR}/scripts/postinst")
set (CPACK_DEBIAN_ARCHITECTURE ${CMAKE_SYSTEM_PROCESSOR})

include (CPack)
